version: '3.7'

services:
  db:
    container_name: db
    image: mysql
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - ./DATA/MySql:/var/lib/mysql:rw
      - ./data:/docker-entrypoint-initdb.d

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 9090:8080

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: user_db
      MONGO_DB_USERNAME: root
      MONGO_DB_PASSWORD: root
    volumes:
      - ./DATA/MongoDB:/data/db
    command: ["--bind_ip", "0.0.0.0"]

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 9050:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    links:
      - mongo

  config-server:
    build:
      context: config-server
      dockerfile: Dockerfile
    container_name: config-server
    restart: always
    ports:
      - 8888:8888

  discovery:
    build:
      context: service-discovery
      dockerfile: Dockerfile
    container_name: discovery
    restart: always
    ports:
      - 9000:9000
    depends_on:
      - config-server

  user:
    build:
      context: user
      dockerfile: Dockerfile
    container_name: user
    restart: always
    ports:
      - 9002:9002
    depends_on:
      - config-server
      - discovery

  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    container_name: auth
    restart: always
    ports:
      - 9004:9004
    depends_on:
      - config-server
      - discovery
      - user

  consumidor:
    build:
      context: consumidor
      dockerfile: Dockerfile
    container_name: consumidor
    restart: always
    ports:
      - 8082:8082
    depends_on:
      - config-server
      - discovery
      - db

  prestadorservico:
    build:
      context: prestadorservico
      dockerfile: Dockerfile
    container_name: prestadorservico
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - config-server
      - discovery

  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    container_name: gateway
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - config-server
      - discovery
      - auth
      - consumidor
      - prestadorservico
      - user
